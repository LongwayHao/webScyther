{"version":3,"sources":["Header.js","Codewrap.js","Runbtn.js","Resultwrap.js","Home.js","index.js"],"names":["Header","className","href","key","autoTextAreaHeight","o","document","querySelector","value","rowsCount","split","length","setAttribute","console","log","Codewrap","props","box","ondrop","e","preventDefault","ondragover","ondragenter","dataFile","dataTransfer","files","dot","name","lastIndexOf","suffix","substring","window","alert","fr","FileReader","readAsText","onload","data","result","changeInput","placeholder","this","input","onChange","target","rows","React","Component","Select","state","selected","changeSelect","bind","setState","axios","get","then","res","protocol","JSON","parse","err","map","item","String","mark","handleRun","Math","random","toString","substr","Date","getTime","data_input","replace","post","arr","protocols","counter","forEach","element","matchelem","match","protocolname","rolename","claim","property","turnout","v","p1","number","nth_of_attack","find","roles","role","roleName","claims","push","changeProtocols","style","display","analyseReturn","Runbtn","onClick","id","Protocol","Role","Claim","nth","index","img","Image","src","margin","height","newwindow","open","write","outerHTML","title","close","Resultwrap","Home","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bdd73f38.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <div>\r\n                <a href=\"./\" className=\"title\">\r\n                    协议分析器\r\n                </a>\r\n\r\n                <a href=\"./help.html\" className=\"a_help\">\r\n                    帮助文档\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nlet key = 0;\r\nfunction id() {\r\n    return String(++key);\r\n}\r\n\r\nfunction autoTextAreaHeight() {\r\n    let o = document.querySelector(\"textarea\");\r\n    let value = o.value;\r\n    let rowsCount = value.split(\"\\n\").length;\r\n    if (rowsCount >= 21) {\r\n        o.setAttribute(\"rows\", rowsCount + 2);\r\n    }\r\n\r\n    console.log(value);\r\n}\r\n\r\nclass Codewrap extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        let box = document.querySelector(\"textarea\");\r\n\r\n        // (1)需要解决一旦拖拽外部文件就覆盖掉当前页面的问题\r\n        //  解决：给document绑定drop事件\r\n        //  drop事件默认触发不了，需要在dragover事件里面阻止默认事件\r\n        document.ondrop = function (e) {\r\n            e.preventDefault();\r\n        };\r\n        // 这个阻止默认事件是为了让drop事件得以触发\r\n        document.ondragover = function (e) {\r\n            e.preventDefault();\r\n        };\r\n\r\n        box.ondragenter = function () {\r\n            // box.style.boxShadow = \"0 0 1px\";\r\n        };\r\n        box.ondrop = (e) => {\r\n            // console.log(e);\r\n            // 得到拖拽过来的文件\r\n            let dataFile = e.dataTransfer.files[0];\r\n            // FileReader实例化\r\n            let dot = dataFile.name.lastIndexOf(\".\");\r\n            let suffix = dataFile.name.substring(dot);\r\n            if (suffix !== \".txt\" && suffix !== \".spdl\") {\r\n                window.alert(\"文件格式错误\");\r\n                return null;\r\n            }\r\n            let fr = new FileReader();\r\n            // 异步读取文件\r\n            fr.readAsText(dataFile);\r\n            // 读取完毕之后执行\r\n            fr.onload = () => {\r\n                // 获取得到的结果\r\n                let data = fr.result;\r\n                box.value = data;\r\n                autoTextAreaHeight();\r\n                this.props.changeInput(data);\r\n            };\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"code_wrap\">\r\n                <div>请输入协议描述:</div>\r\n                <textarea\r\n                    placeholder=\"支持.txt或.spdl文件拖拽至框内\"\r\n                    value={this.props.input}\r\n                    onChange={(e) => {\r\n                        autoTextAreaHeight();\r\n                        this.props.changeInput(e.target.value);\r\n                    }}\r\n                    rows=\"23\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//Select组件\r\nclass Select extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: \"点击选择协议\",\r\n        };\r\n        this.changeSelect = this.changeSelect.bind(this);\r\n    }\r\n\r\n    changeSelect(e) {\r\n        let value = e.target.value;\r\n        this.setState({ selected: value });\r\n        if (value === \"点击选择协议\") {\r\n        } else {\r\n            axios.get(`http://192.168.2.130/protocols/${value}`).then(\r\n                (res) => {\r\n                    let protocol = JSON.parse(res.data)[\"protocol\"];\r\n                    document.querySelector(\"textarea\").value = protocol;\r\n                    autoTextAreaHeight();\r\n                    this.props.changeInput(protocol);\r\n                },\r\n                (err) => {\r\n                    window.alert(`请求失败，err：${err}`);\r\n                }\r\n            );\r\n        }\r\n    }\r\n    render() {\r\n        let arr = [\r\n            \"点击选择协议\",\r\n            \"ns3\",\r\n            \"nsl3\",\r\n            \"nsl3-broken\",\r\n            \"tmn\",\r\n            \"wmf\",\r\n            \"needham-schroeder-sk\",\r\n            \"needham-schroeder-lowe\",\r\n        ];\r\n\r\n        return (\r\n            <div className=\"select\">\r\n                经典安全协议选择：\r\n                <select\r\n                    value={this.state.selected}\r\n                    onChange={this.changeSelect}\r\n                >\r\n                    {arr.map((item) => {\r\n                        return <option key={id()}>{item}</option>;\r\n                    })}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport { Codewrap, Select };\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nlet mark = \"\";\r\nfunction handleRun(props) {\r\n    mark = Math.random().toString().substr(3, 17) + new Date().getTime();\r\n    let data_input = {\r\n        input: props.input,\r\n        mark,\r\n    };\r\n    if (data_input.input.replace(/\\s*/g, \"\") == \"\") {\r\n        window.alert(\"请正确输入协议描述\");\r\n        return null;\r\n    }\r\n    axios.post(\"http://192.168.2.130/result/\", data_input).then(\r\n        (res) => {\r\n            analyseReturn(res.data, props);\r\n        },\r\n        (err) => {\r\n            window.alert(`err:${err}`);\r\n        }\r\n    );\r\n}\r\n\r\nfunction analyseReturn(res, props) {\r\n    let arr = JSON.parse(res)[\"result\"].split(\"\\n\");\r\n\r\n    let protocols = [];\r\n    let counter = 1;\r\n    arr.forEach((element) => {\r\n        //遍历claim\r\n        //claim\t(ns3),(I)\t(Secret)_(I2)\t(ni)\t(Ok)\t([proof of correctness])\r\n        let matchelem = element.match(\r\n            /claim\\t(.+),(.+)\\t(.+)_(.+)\\t(.+)\\t(.+)\\t(.+)/\r\n        );\r\n        let protocolname = matchelem[1];\r\n        matchelem[5] = matchelem[5] === \"-\" ? \"\" : matchelem[5];\r\n        let rolename = matchelem[2];\r\n        let claim = {\r\n            property: `${matchelem[3]} ${matchelem[5]}`,\r\n            turnout: matchelem[6]\r\n                .replace(/\\u001b\\[32mOk\\u001b\\[0m/g, \"成功\")\r\n                .replace(/\\u001b\\[31mFail\\u001b\\[0m/g, \"失败\"),\r\n            state: matchelem[7]\r\n                .replace(/\\[no attack within bounds\\]/, \"界限内没有攻击\")\r\n                .replace(/\\[proof of correctness\\]/, \"正确性证明\")\r\n\r\n                .replace(\r\n                    /\\[at least (\\d+) attack(s)?\\]/,\r\n                    (v, p1) => `至少存在 ${p1} 个攻击`\r\n                )\r\n\r\n                .replace(\r\n                    /\\[exactly (\\d+) attack(s)?\\]/,\r\n                    (v, p1) => `存在 ${p1} 个攻击`\r\n                ),\r\n\r\n            number:\r\n                matchelem[7].match(/\\d+/) == null\r\n                    ? 0\r\n                    : +matchelem[7].match(/\\d+/)[0],\r\n            nth_of_attack: counter,\r\n        };\r\n        counter += claim.number;\r\n        if (protocols.find((protocol) => protocol.name === protocolname)) {\r\n            protocols.forEach((protocol) => {\r\n                if (protocol.name === protocolname) {\r\n                    if (\r\n                        protocol.roles.find(\r\n                            (role) => role.roleName === rolename\r\n                        )\r\n                    ) {\r\n                        protocol.roles.forEach((role) => {\r\n                            if (role.roleName === rolename) {\r\n                                role.claims.push(claim);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        protocol.roles.push({\r\n                            roleName: rolename,\r\n                            claims: [claim],\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            protocols.push({\r\n                name: protocolname,\r\n                roles: [\r\n                    {\r\n                        roleName: rolename,\r\n                        claims: [claim],\r\n                    },\r\n                ],\r\n            });\r\n        }\r\n    });\r\n    props.changeProtocols(protocols);\r\n    document.querySelector(\".warp\").style.display = \"block\";\r\n}\r\n\r\nexport { mark };\r\nexport default function Runbtn(props) {\r\n    return <button onClick={() => handleRun(props)}>运行</button>;\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { mark } from \"./Runbtn.js\";\r\n\r\nlet key = 0;\r\nfunction id() {\r\n    return String(++key);\r\n}\r\n\r\nfunction attackChart(property, number, nth) {\r\n    axios.get(`http://192.168.2.130/charts/${mark}/${number}/${nth}`).then(\r\n        (res) => {\r\n            let base = JSON.parse(res.data)[\"picture\"];\r\n            base.forEach((item, index) => {\r\n                const img = new Image();\r\n\r\n                img.src = \"data:image/png;base64,\" + item;\r\n                img.style.display = \"block\";\r\n                img.style.margin = \"0 auto\";\r\n                img.style.height = \"700px\";\r\n                let newwindow = window.open();\r\n                newwindow.document.write(img.outerHTML);\r\n                newwindow.document.title = `${property}的第${\r\n                    index + 1\r\n                }张攻击图`;\r\n                newwindow.document.close();\r\n            });\r\n        },\r\n        (err) => {\r\n            console.log(err);\r\n        }\r\n    );\r\n}\r\n\r\nfunction Protocol(props) {\r\n    return (\r\n        <div>\r\n            <p>协议名称：{props.protocol.name}</p>\r\n            {props.protocol.roles.map((role) => {\r\n                return <Role key={id()} role={role} />;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Role(props) {\r\n    return (\r\n        <div>\r\n            角色：{props.role.roleName}\r\n            <ul>\r\n                <span>声明(claim)</span>\r\n                <span>状态</span>\r\n                <span>信息</span>\r\n                {props.role.claims.map((claim) => {\r\n                    return <Claim key={id()} claim={claim} />;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Claim(props) {\r\n    let claim = props.claim;\r\n    return (\r\n        <li>\r\n            <span>{claim.property}</span>\r\n            <span>{claim.turnout}</span>\r\n            <span>\r\n                {claim.turnout === \"成功\" ? (\r\n                    claim.state\r\n                ) : (\r\n                    <button\r\n                        onClick={() =>\r\n                            attackChart(\r\n                                claim.property,\r\n                                claim.number,\r\n                                claim.nth_of_attack\r\n                            )\r\n                        }\r\n                    >\r\n                        {claim.state}\r\n                    </button>\r\n                )}\r\n            </span>\r\n        </li>\r\n    );\r\n}\r\nexport default function Resultwrap(props) {\r\n    let result_wrap = (\r\n        <div className=\"result_wrap\">\r\n            <div>运行结果:</div>\r\n            <div className=\"warp\">\r\n                {props.protocols.map((protocol) => {\r\n                    return <Protocol key={id()} protocol={protocol} />;\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return result_wrap;\r\n}\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { Codewrap, Select } from \"./Codewrap.js\";\r\nimport Resultwrap from \"./Resultwrap.js\";\r\nimport Runbtn from \"./Runbtn.js\";\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            protocols: [\r\n                {\r\n                    name: \"\",\r\n                    roles: [\r\n                        {\r\n                            roleName: \"\",\r\n                            claims: [\r\n                                {\r\n                                    property: \"\",\r\n\r\n                                    turnout: \"\",\r\n                                    // Ok  Fail\r\n                                    state: \"\",\r\n                                    // attack那句话\r\n                                    number: 0,\r\n                                    // 包含几个攻击图\r\n                                    nth_of_attack: 0,\r\n                                    // 第几个攻击图开始是我的\r\n                                },\r\n                            ],\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            input: \"\",\r\n        };\r\n        this.changeInput = this.changeInput.bind(this);\r\n        this.changeProtocols = this.changeProtocols.bind(this);\r\n    }\r\n\r\n    changeInput(input) {\r\n        this.setState({ input });\r\n    }\r\n    changeProtocols(protocols) {\r\n        this.setState({ protocols });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"tab\">\r\n                    <Select changeInput={this.changeInput} />\r\n                    <Runbtn\r\n                        input={this.state.input}\r\n                        changeProtocols={this.changeProtocols}\r\n                    />\r\n                </div>\r\n                <Codewrap\r\n                    input={this.state.input}\r\n                    changeInput={this.changeInput}\r\n                />\r\n                <Resultwrap protocols={this.state.protocols} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nfunction App() {\n    return (\n        <div>\n            <Header />\n            <Home />\n        </div>\n    );\n}\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}